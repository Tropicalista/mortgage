{"version":3,"file":"result/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAqC;AAE6B;AAEnD,SAASG,IAAIA,CAAE;EAAEC,UAAU;EAAEC,aAAa;EAAEC;AAAQ,CAAC,EAAG;EACtE,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGJ,UAAU;EAEnC,MAAMK,UAAU,GAAGR,sEAAa,CAAC,CAAC;EAElC,OACCS,oDAAA;IAAA,GAAUD;EAAU,GACnBC,oDAAA,CAACR,6DAAQ;IACRS,OAAO,EAAC,MAAM;IACdC,cAAc,EAAG,EAAI;IACrBC,KAAK,EAAGN,IAAM;IACdO,QAAQ,EAAKC,GAAG,IAAMV,aAAa,CAAE;MAAEE,IAAI,EAAEQ;IAAI,CAAE,CAAG;IACtDC,WAAW,EAAGhB,mDAAE,CAAE,aAAa,EAAE,UAAW;EAAG,CAC/C,CAAC,EACFU,oDAAA,eAAM,OAAK,EAAEJ,OAAO,CAAE,mBAAmB,CAAU,CAC/C,CAAC;AAER;;;;;;;;;;ACrBA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNsD;AAC5B;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACAW,oEAAiB,CAAEC,wCAAQ,EAAE;EAC5B;AACD;AACA;EACCC,IAAI,EAAEhB,6CAAIA;AACX,CAAE,CAAC,C","sources":["webpack://y/./src/result/edit.js","webpack://y/external window \"React\"","webpack://y/external window [\"wp\",\"blockEditor\"]","webpack://y/external window [\"wp\",\"blocks\"]","webpack://y/external window [\"wp\",\"i18n\"]","webpack://y/webpack/bootstrap","webpack://y/webpack/runtime/compat get default export","webpack://y/webpack/runtime/define property getters","webpack://y/webpack/runtime/hasOwnProperty shorthand","webpack://y/webpack/runtime/make namespace object","webpack://y/./src/result/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\n\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\n\nexport default function Edit( { attributes, setAttributes, context } ) {\n\tconst { text, resume } = attributes;\n\n\tconst blockProps = useBlockProps();\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<RichText\n\t\t\t\ttagName=\"span\"\n\t\t\t\tallowedFormats={ [] }\n\t\t\t\tvalue={ text }\n\t\t\t\tonChange={ ( val ) => setAttributes( { text: val } ) }\n\t\t\t\tplaceholder={ __( 'Enter textâ€¦', 'mortgage' ) }\n\t\t\t/>\n\t\t\t<span> 100 { context[ 'mortgage/currency' ] }</span>\n\t\t</div>\n\t);\n}\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport Edit from './edit';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n} );\n"],"names":["__","useBlockProps","RichText","Edit","attributes","setAttributes","context","text","resume","blockProps","createElement","tagName","allowedFormats","value","onChange","val","placeholder","registerBlockType","metadata","edit"],"sourceRoot":""}